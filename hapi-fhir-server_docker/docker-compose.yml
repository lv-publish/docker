version: "3.8"

services:
  hapi-fhir:
    container_name: hapi-fhir-r4b
    image: "hapiproject/hapi:latest"
    ports:
      - "8084:8080"
    environment:
      # Spring Boot configuration
      - SPRING_CONFIG_LOCATION=file:///app/config/application.yaml
      # JVM options for better performance
      - JAVA_OPTS=-Xms2g -Xmx4g -XX:+UseG1GC
    volumes:
      - ./config/application.yaml:/app/config/application.yaml:ro
      - hapi-data:/app/data
    # extra_hosts:
    #   - "hapi-fhir.tabca.vn:127.0.0.1"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/fhir/metadata"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  postgres:
    container_name: hapi-postgres
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: hapi
      POSTGRES_USER: hapi
      POSTGRES_PASSWORD: hapi_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    # ports:
    #   - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hapi -d hapi"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  hapi-data:
    driver: local
  postgres-data:
    driver: local

networks:
  default:
    name: hapi-fhir-network
